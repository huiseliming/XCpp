cmake_minimum_required(VERSION 3.26)

# set(CMAKE_C_COMPILER "zig.exe cc")
# set(CMAKE_CXX_COMPILER "zig.exe c++")

# windows config vcpkg
if(WIN32)
    message("ENV{CUSTOM_VCPKG}: " $ENV{CUSTOM_VCPKG})
    if(DEFINED ENV{CUSTOM_VCPKG})
        set(CMAKE_TOOLCHAIN_FILE "$ENV{CUSTOM_VCPKG}/scripts/buildsystems/vcpkg.cmake")
    else()
        message(FATAL_ERROR "NOT FIND ENVIRONMENT VARIABLE VCPKG_ROOT")
    endif()
    set(VCPKG_TARGET_TRIPLET "x64-windows" CACHE STRING "")
    message("CMAKE_TOOLCHAIN_FILE: " ${CMAKE_TOOLCHAIN_FILE})
    message("VCPKG_TARGET_TRIPLET: " ${VCPKG_TARGET_TRIPLET})
endif(WIN32) 

project(XCpp)
 
include(cmake/CppHeaderTool.cmake)

# not supported 32 bit machine
if("${CMAKE_SIZEOF_VOID_P}" STREQUAL "4")
    message(FATAL_ERROR "NOT SUPPORTED 32 BIT MACHINE")
endif()

set(CMAKE_CXX_STANDARD 20)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

foreach(CONFIGURATION_TYPE ${CMAKE_CONFIGURATION_TYPES})
    set(CONFIGURATION_TYPE ${CONFIGURATION_TYPE})
    string(TOUPPER ${CONFIGURATION_TYPE} CONFIGURATION_TYPE)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${CONFIGURATION_TYPE_TOUPPER} ${CMAKE_RUNTIME_OUTPUT_DIRECTORY}/${CONFIGURATION_TYPE})
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${CONFIGURATION_TYPE_TOUPPER} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${CONFIGURATION_TYPE})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${CONFIGURATION_TYPE_TOUPPER} ${CMAKE_ARCHIVE_OUTPUT_DIRECTORY}/${CONFIGURATION_TYPE})
endforeach(CONFIGURATION_TYPE CMAKE_CONFIGURATION_TYPES)

#add_subdirectory(bin)
#add_subdirectory(third_party)
add_subdirectory(src)








